<link rel='stylesheet' href='{{ 'component-list-menu.css' | asset_url }}' media='print' onload="this.media='all'">
<link rel='stylesheet' href='{{ 'component-search.css' | asset_url }}' media='print' onload="this.media='all'">
<link rel='stylesheet' href='{{ 'component-menu-drawer.css' | asset_url }}' media='print' onload="this.media='all'">
<link
  rel='stylesheet'
  href='{{ 'component-cart-notification.css' | asset_url }}'
  media='print'
  onload="this.media='all'"
>

{%- if settings.predictive_search_enabled -%}
  <link rel='stylesheet' href='{{ 'component-price.css' | asset_url }}' media='print' onload="this.media='all'">
{%- endif -%}

{%- if section.settings.menu_type_desktop == 'mega' -%}
  <link rel='stylesheet' href='{{ 'component-mega-menu.css' | asset_url }}' media='print' onload="this.media='all'">
{%- endif -%}

<style>
  header-drawer {
    justify-self: start;
    margin-left: -1.2rem;
  }

  {%- if section.settings.sticky_header_type == 'reduce-logo-size' -%}
    .scrolled-past-header .header__heading-logo-wrapper {
      width: 75%;
    }
  {%- endif -%}

  {%- if section.settings.menu_type_desktop != "drawer" -%}
    @media screen and (min-width: 990px) {
      header-drawer {
        display: none;
      }
    }
  {%- endif -%}

  .menu-drawer-container {
    display: flex;
  }

  .list-menu {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .list-menu--inline {
    display: inline-flex;
    flex-wrap: wrap;
  }

  summary.list-menu__item {
    padding-right: 2.7rem;
  }

  .list-menu__item {
    display: flex;
    align-items: center;
    line-height: calc(1 + 0.3 / var(--font-body-scale));
  }

  .list-menu__item--link {
    text-decoration: none;
    padding-bottom: 1rem;
    padding-top: 1rem;
    line-height: calc(1 + 0.8 / var(--font-body-scale));
  }

  @media screen and (min-width: 750px) {
    .list-menu__item--link {
      padding-bottom: 0.5rem;
      padding-top: 0.5rem;
    }
  }

  /* Sticky header styles */
  .header-wrapper {
    position: relative;
    z-index: 4;
  }

  .shopify-section-header-sticky {
    position: sticky;
    top: 0;
    z-index: 4;
  }

  .section-header {
    position: sticky;
    top: 0;
    z-index: 4;
  }

  .shopify-section-header-hidden {
    top: calc(-1 * var(--header-height));
  }

  .shopify-section-header-hidden.menu-open {
    top: 0;
  }

  .section-header.animate {
    transition: top 0.15s ease-out;
  }

  /* Update transition timing */
  .header-wrapper {
    transition: background-color 0.2s ease-out, top 0.2s ease-out;
  }

  .header-wrapper.scrolled {
    background: rgb(var(--color-background)) !important;
    background: var(--gradient-background) !important;
    top: 0 !important;
  }

  .section-header {
    transition: transform 0.2s ease-out;
  }

  /* Home page specific styles */
  {% if request.page_type == 'index' %}
    .header-wrapper {
      position: fixed;
      left: 0;
      right: 0;
      z-index: 4;
      background: transparent !important;
      top: var(--announcement-bar-height, 0px);
    }

    /* Logo handling */
    .header__heading-logo-wrapper {
      position: relative;
    }

    .header__heading-logo {
      transition: opacity 0.2s ease-out;
    }

    .default-logo {
      opacity: 0;
    }

    .light-logo {
      opacity: 1;
      position: absolute;
      top: 0;
      left: 0;
    }

    .header-wrapper.scrolled .default-logo {
      opacity: 1;
    }

    .header-wrapper.scrolled .light-logo {
      opacity: 0;
    }

    /* White text and icons when transparent */
    .header-wrapper .header__heading-link .h2,
    .header-wrapper .header__menu-item,
    .header-wrapper .header__icon,
    .header-wrapper .header__heading-link,
    .header-wrapper .header__icon--cart,
    .header-wrapper .header__icon--account,
    .header-wrapper .header__search,
    .header-wrapper .header__search-input,
    .header-wrapper .header__search-input::placeholder {
      color: rgb(255, 255, 255) !important;
      transition: color 0.2s ease-out;
    }

    /* Return to default colors when scrolled */
    .header-wrapper.scrolled .header__heading-link .h2,
    .header-wrapper.scrolled .header__menu-item,
    .header-wrapper.scrolled .header__icon,
    .header-wrapper.scrolled .header__heading-link,
    .header-wrapper.scrolled .header__icon--cart,
    .header-wrapper.scrolled .header__icon--account,
    .header-wrapper.scrolled .header__search,
    .header-wrapper.scrolled .header__search-input,
    .header-wrapper.scrolled .header__search-input::placeholder {
      color: rgb(var(--color-foreground)) !important;
    }

    /* Add padding to first section to account for announcement bar only */
    .shopify-section:first-of-type {
      {% comment %} padding-top: var(--announcement-bar-height, 0px); {% endcomment %}
    }
  {% else %}
    .shopify-section-header-sticky {
      position: sticky;
      top: 0;
      z-index: 4;
    }
  {% endif %}
</style>

{%- style -%}
  .header {
    padding: {{ section.settings.padding_top | times: 0.5 | round: 0 }}px 3rem {{ section.settings.padding_bottom | times: 0.5 | round: 0 }}px 3rem;
  }

  .section-header {
    position: sticky; /* This is for fixing a Safari z-index issue. PR #2147 */
    margin-bottom: {{ section.settings.margin_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-header {
      margin-bottom: {{ section.settings.margin_bottom }}px;
    }
  }

  @media screen and (min-width: 990px) {
    .header {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<script src='{{ 'cart-notification.js' | asset_url }}' defer='defer'></script>

{%- liquid
  for block in section.blocks
    if block.type == '@app'
      assign has_app_block = true
    endif
  endfor
-%}

{%- liquid
  assign social_links = false
  assign localization_forms = false
  assign header_classes = 'header-wrapper color-' | append: section.settings.color_scheme | append: ' gradient'
  if section.settings.show_line_separator
    assign header_classes = header_classes | append: ' header-wrapper--border-bottom'
  endif
-%}

<div
  {% if section.settings.sticky_header_type != 'none' %}
    data-sticky-header data-sticky-type='{{ section.settings.sticky_header_type }}'
  {% endif %}
  class='{{ header_classes }}'
>
  <header class='header header--{{ section.settings.logo_position }} header--mobile-{{ section.settings.mobile_logo_position }} page-width{% if section.settings.menu_type_desktop == 'drawer' %} drawer-menu{% endif %}{% if section.settings.menu != blank %} header--has-menu{% endif %}{% if has_app_block %} header--has-app{% endif %}{% if social_links %} header--has-social{% endif %}{% if shop.customer_accounts_enabled %} header--has-account{% endif %}{% if localization_forms %} header--has-localizations{% endif %}{% if section.settings.sticky_header_type != 'none' %} shopify-section-header-sticky{% endif %}'>
    {%- liquid
      if section.settings.menu != blank
        render 'header-drawer'
      endif

      if section.settings.logo_position == 'top-center' or section.settings.menu == blank
        render 'header-search', input_id: 'Search-In-Modal-1'
      endif
    -%}

    {%- if section.settings.logo_position != 'middle-center' -%}
      {%- if request.page_type == 'index' -%}
        <h1 class='header__heading'>
      {%- endif -%}
      <a href='{{ routes.root_url }}' class='header__heading-link link link--text focus-inset'>
        {%- if settings.logo != blank -%}
          <div class='header__heading-logo-wrapper'>
            {%- assign logo_alt = settings.logo.alt | default: shop.name | escape -%}
            {%- assign logo_height = settings.logo_width | divided_by: settings.logo.aspect_ratio -%}
            {% capture sizes %}(max-width: {{ settings.logo_width | times: 2 }}px) 50vw, {{ settings.logo_width }}px{% endcapture %}
            {% capture widths %}{{ settings.logo_width }}, {{ settings.logo_width | times: 1.5 | round }}, {{ settings.logo_width | times: 2 }}{% endcapture %}
            {{
              settings.logo
              | image_url: width: 600
              | image_tag:
                class: 'header__heading-logo motion-reduce default-logo',
                widths: widths,
                height: logo_height,
                width: settings.logo_width,
                alt: logo_alt,
                sizes: sizes,
                preload: true
            }}
            {%- if settings.logo_light != blank -%}
              {{
                settings.logo_light
                | image_url: width: 600
                | image_tag:
                  class: 'header__heading-logo motion-reduce light-logo',
                  widths: widths,
                  height: logo_height,
                  width: settings.logo_width,
                  alt: logo_alt,
                  sizes: sizes,
                  preload: true
              }}
            {%- endif -%}
          </div>
        {%- else -%}
          <span class='h2'>{{ shop.name }}</span>
        {%- endif -%}
      </a>
      {%- if request.page_type == 'index' -%}
        </h1>
      {%- endif -%}
    {%- endif -%}

    {%- liquid
      if section.settings.menu != blank
        if section.settings.menu_type_desktop == 'dropdown'
          render 'header-dropdown-menu'
        elsif section.settings.menu_type_desktop != 'drawer'
          render 'header-mega-menu'
        endif
      endif
    %}

    {%- if section.settings.logo_position == 'middle-center' -%}
      {%- if request.page_type == 'index' -%}
        <h1 class='header__heading'>
      {%- endif -%}
      <a href='{{ routes.root_url }}' class='header__heading-link link link--text focus-inset'>
        {%- if settings.logo != blank -%}
          <div class='header__heading-logo-wrapper'>
            {%- assign logo_alt = settings.logo.alt | default: shop.name | escape -%}
            {%- assign logo_height = settings.logo_width | divided_by: settings.logo.aspect_ratio -%}
            {% capture sizes %}(min-width: 750px) {{ settings.logo_width }}px, 50vw{% endcapture %}
            {% capture widths %}{{ settings.logo_width }}, {{ settings.logo_width | times: 1.5 | round }}, {{ settings.logo_width | times: 2 }}{% endcapture %}
            {{
              settings.logo
              | image_url: width: 600
              | image_tag:
                class: 'header__heading-logo default-logo',
                widths: widths,
                height: logo_height,
                width: settings.logo_width,
                alt: logo_alt,
                sizes: sizes,
                preload: true
            }}
            {%- if section.settings.logo_light != blank -%}
              {{
                section.settings.logo_light
                | image_url: width: 600
                | image_tag:
                  class: 'header__heading-logo light-logo',
                  widths: widths,
                  height: logo_height,
                  width: settings.logo_width,
                  alt: logo_alt,
                  sizes: sizes,
                  preload: true
              }}
            {%- endif -%}
          </div>
        {%- else -%}
          <span class='h2'>{{ shop.name }}</span>
        {%- endif -%}
      </a>
      {%- if request.page_type == 'index' -%}
        </h1>
      {%- endif -%}
    {%- endif -%}

    <div class='header__icons{% if section.settings.enable_country_selector or section.settings.enable_language_selector %} header__icons--localization header-localization{% endif %}'>
      {% if section.settings.secondary_menu != blank %}
        <div class='header__secondary-menu'>
          <ul class='list-menu list-menu--inline' role='list'>
            {%- for link in linklists[section.settings.secondary_menu].links -%}
              <li>
                <a href='{{ link.url }}' class='header__heading-link link link--text focus-inset'>
                  {{ link.title | escape }}
                </a>
              </li>
            {%- endfor -%}
          </ul>
        </div>
      {% endif %}

      <div class='desktop-localization-wrapper'>
        {%- if section.settings.enable_country_selector and localization.available_countries.size > 1 -%}
          <localization-form class='small-hide medium-hide' data-prevent-hide>
            {%- form 'localization', id: 'HeaderCountryForm', class: 'localization-form' -%}
              <div>
                <h2 class='visually-hidden' id='HeaderCountryLabel'>{{ 'localization.country_label' | t }}</h2>
                {%- render 'country-localization', localPosition: 'HeaderCountry' -%}
              </div>
            {%- endform -%}
          </localization-form>
        {% endif %}

        {%- if section.settings.enable_language_selector and localization.available_languages.size > 1 -%}
          <localization-form class='small-hide medium-hide' data-prevent-hide>
            {%- form 'localization', id: 'HeaderLanguageForm', class: 'localization-form' -%}
              <div>
                <h2 class='visually-hidden' id='HeaderLanguageLabel'>{{ 'localization.language_label' | t }}</h2>
                {%- render 'language-localization', localPosition: 'HeaderLanguage' -%}
              </div>
            {%- endform -%}
          </localization-form>
        {%- endif -%}
      </div>
      {% render 'header-search', input_id: 'Search-In-Modal' %}

      {%- if shop.customer_accounts_enabled -%}
        <a
          href='{%- if customer -%}{{ routes.account_url }}{%- else -%}{{ routes.account_login_url }}{%- endif -%}'
          class='header__icon header__icon--account link focus-inset{% if section.settings.menu != blank %} small-hide{% endif %}'
          rel='nofollow'
        >
          {%- if section.settings.enable_customer_avatar -%}
            <account-icon>
              {%- if customer and customer.has_avatar? -%}
                {{ customer | avatar }}
              {%- else -%}
                <span class='svg-wrapper'>{{ 'icon-account.svg' | inline_asset_content }}</span>
              {%- endif -%}
            </account-icon>
          {%- else -%}
            <span class='svg-wrapper'>{{ 'icon-account.svg' | inline_asset_content }}</span>
          {%- endif -%}
          <span class='visually-hidden'>
            {%- liquid
              if customer
                echo 'customer.account_fallback' | t
              else
                echo 'customer.log_in' | t
              endif
            -%}
          </span>
        </a>
      {%- endif -%}

      {%- for block in section.blocks -%}
        {%- case block.type -%}
          {%- when '@app' -%}
            {% render block %}
        {%- endcase -%}
      {%- endfor -%}

      <a href='{{ routes.cart_url }}' class='header__icon header__icon--cart link focus-inset' id='cart-icon-bubble'>
        {% if cart == empty %}
          <span class='svg-wrapper'>{{ 'icon-cart-empty.svg' | inline_asset_content }}</span>
        {% else %}
          <span class='svg-wrapper'>{{ 'icon-cart.svg' | inline_asset_content }}</span>
        {% endif %}
        <span class='visually-hidden'>{{ 'templates.cart.cart' | t }}</span>
        {%- if cart != empty -%}
          <div class='cart-count-bubble'>
            {%- if cart.item_count < 100 -%}
              <span aria-hidden='true'>{{ cart.item_count }}</span>
            {%- endif -%}
            <span class='visually-hidden'>{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
          </div>
        {%- endif -%}
      </a>
    </div>
  </header>
</div>

{%- if settings.cart_type == 'notification' -%}
  {%- render 'cart-notification',
    color_scheme: section.settings.color_scheme,
    desktop_menu_type: section.settings.menu_type_desktop
  -%}
{%- endif -%}

{% javascript %}
  document.addEventListener('DOMContentLoaded', function () {
    const headerWrapper = document.querySelector('.header-wrapper');
    const header = document.querySelector('.section-header');
    const announcementBar = document.querySelector('.announcement-bar');
    let currentScrollTop = 0;
    let headerBounds = {};
    let isScrolling;

    function setHeaderHeight() {
      if (!header) return;
      document.documentElement.style.setProperty('--header-height', `${header.offsetHeight}px`);
    }

    function setAnnouncementBarHeight() {
      if (announcementBar) {
        const height = announcementBar.offsetHeight;
        document.documentElement.style.setProperty('--announcement-bar-height', `${height}px`);
      } else {
        document.documentElement.style.setProperty('--announcement-bar-height', '0px');
      }
    }

    function createObserver() {
      let observer = new IntersectionObserver((entries) => {
        headerBounds = entries[0].intersectionRect;
        observer.disconnect();
      });

      observer.observe(header);
    }

    function updateHeaderState(scrollTop) {
      // Handle transparent header on home page
      if (headerWrapper && window.location.pathname === '/') {
        if (scrollTop > 50) {
          headerWrapper.classList.add('scrolled');
        } else {
          headerWrapper.classList.remove('scrolled');
        }
      }

      // Handle sticky behavior for non-home pages
      if (window.location.pathname !== '/') {
        if (scrollTop > headerBounds.bottom) {
          header.classList.add('scrolled-past-header');
          header.classList.add('shopify-section-header-sticky');
        } else {
          header.classList.remove('scrolled-past-header');
          header.classList.remove('shopify-section-header-sticky');
        }
      }
    }

    function onScroll() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

      // Clear any pending scroll timeout
      if (isScrolling) {
        window.clearTimeout(isScrolling);
      }

      // Update header state immediately
      updateHeaderState(scrollTop);

      // Store current scroll position
      currentScrollTop = scrollTop;

      // Set a timeout to handle any final scroll state
      isScrolling = setTimeout(() => {
        updateHeaderState(scrollTop);
      }, 100);
    }

    // Initialize
    setAnnouncementBarHeight();
    setHeaderHeight();
    createObserver();

    // Add event listeners
    window.addEventListener('scroll', onScroll, { passive: true });
    window.matchMedia('(max-width: 990px)').addEventListener('change', () => {
      setHeaderHeight();
      setAnnouncementBarHeight();
    });
    window.addEventListener('resize', setAnnouncementBarHeight);

    // Initialize header state
    updateHeaderState(window.scrollY);
  });
{% endjavascript %}

<script type='application/ld+json'>
  {
    "@context": "http://schema.org",
    "@type": "Organization",
    "name": {{ shop.name | json }},
    {% if settings.logo %}
      "logo": {{ settings.logo | image_url: width: 500 | prepend: "https:" | json }},
    {% endif %}
    "sameAs": [
      {{ settings.social_twitter_link | json }},
      {{ settings.social_facebook_link | json }},
      {{ settings.social_pinterest_link | json }},
      {{ settings.social_instagram_link | json }},
      {{ settings.social_tiktok_link | json }},
      {{ settings.social_tumblr_link | json }},
      {{ settings.social_snapchat_link | json }},
      {{ settings.social_youtube_link | json }},
      {{ settings.social_vimeo_link | json }}
    ],
    "url": {{ request.origin | append: page.url | json }}
  }
</script>

{%- if request.page_type == 'index' -%}
  {% assign potential_action_target = request.origin | append: routes.search_url | append: '?q={search_term_string}' %}
  <script type='application/ld+json'>
    {
      "@context": "http://schema.org",
      "@type": "WebSite",
      "name": {{ shop.name | json }},
      "potentialAction": {
        "@type": "SearchAction",
        "target": {{ potential_action_target | json }},
        "query-input": "required name=search_term_string"
      },
      "url": {{ request.origin | append: page.url | json }}
    }
  </script>
{%- endif -%}

{% schema %}
{
  "name": "t:sections.header.name",
  "class": "section-header",
  "settings": [
    {
      "type": "image_picker",
      "id": "logo",
      "label": "t:sections.header.settings.logo.label"
    },
    {
      "type": "image_picker",
      "id": "logo_light",
      "label": "Light logo (for transparent header)",
      "info": "This logo will be shown when the header is transparent"
    },
    {
      "type": "range",
      "id": "logo_width",
      "min": 50,
      "max": 250,
      "step": 10,
      "default": 100,
      "unit": "px",
      "label": "t:sections.header.settings.logo_width.label"
    },
    {
      "type": "select",
      "id": "logo_position",
      "options": [
        {
          "value": "top-left",
          "label": "t:sections.header.settings.logo_position.options__2.label"
        },
        {
          "value": "top-center",
          "label": "t:sections.header.settings.logo_position.options__3.label"
        },
        {
          "value": "middle-left",
          "label": "t:sections.header.settings.logo_position.options__1.label"
        },
        {
          "value": "middle-center",
          "label": "t:sections.header.settings.logo_position.options__4.label"
        }
      ],
      "default": "middle-left",
      "label": "t:sections.header.settings.logo_position.label",
      "info": "t:sections.header.settings.logo_help.content"
    },
    {
      "type": "link_list",
      "id": "menu",
      "default": "main-menu",
      "label": "t:sections.header.settings.menu.label"
    },
    {
      "type": "link_list",
      "id": "secondary_menu",
      "label": "Right menu"
    },
    {
      "type": "select",
      "id": "menu_type_desktop",
      "options": [
        {
          "value": "dropdown",
          "label": "t:sections.header.settings.menu_type_desktop.options__1.label"
        },
        {
          "value": "mega",
          "label": "t:sections.header.settings.menu_type_desktop.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.header.settings.menu_type_desktop.options__3.label"
        }
      ],
      "default": "dropdown",
      "label": "t:sections.header.settings.menu_type_desktop.label",
      "info": "t:sections.header.settings.menu_type_desktop.info"
    },
    {
      "type": "select",
      "id": "sticky_header_type",
      "options": [
        {
          "value": "none",
          "label": "t:sections.header.settings.sticky_header_type.options__1.label"
        },
        {
          "value": "on-scroll-up",
          "label": "t:sections.header.settings.sticky_header_type.options__2.label"
        },
        {
          "value": "always",
          "label": "t:sections.header.settings.sticky_header_type.options__3.label"
        },
        {
          "value": "reduce-logo-size",
          "label": "t:sections.header.settings.sticky_header_type.options__4.label"
        }
      ],
      "default": "on-scroll-up",
      "label": "t:sections.header.settings.sticky_header_type.label"
    },
    {
      "type": "checkbox",
      "id": "show_line_separator",
      "default": true,
      "label": "t:sections.header.settings.show_line_separator.label"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__1.content"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "color_scheme",
      "id": "menu_color_scheme",
      "label": "t:sections.header.settings.menu_color_scheme.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__3.content",
      "info": "t:sections.header.settings.header__4.info"
    },
    {
      "type": "checkbox",
      "id": "enable_country_selector",
      "default": true,
      "label": "t:sections.header.settings.enable_country_selector.label"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__5.content",
      "info": "t:sections.header.settings.header__6.info"
    },
    {
      "type": "checkbox",
      "id": "enable_language_selector",
      "default": true,
      "label": "t:sections.header.settings.enable_language_selector.label"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__7.content",
      "info": "t:sections.header.settings.header__7.info"
    },
    {
      "type": "checkbox",
      "id": "enable_customer_avatar",
      "default": true,
      "label": "t:sections.header.settings.enable_customer_avatar.label",
      "info": "t:sections.header.settings.enable_customer_avatar.info"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.mobile_layout.content"
    },
    {
      "type": "select",
      "id": "mobile_logo_position",
      "options": [
        {
          "value": "center",
          "label": "t:sections.header.settings.mobile_logo_position.options__1.label"
        },
        {
          "value": "left",
          "label": "t:sections.header.settings.mobile_logo_position.options__2.label"
        }
      ],
      "default": "center",
      "label": "t:sections.header.settings.mobile_logo_position.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.spacing"
    },
    {
      "type": "range",
      "id": "margin_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.header.settings.margin_bottom.label",
      "default": 0
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 36,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 20
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 36,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 20
    }
  ]
}
{% endschema %}
